source("http://www.openintro.org/stat/data/present.R")
present
dim(present)
dim(present)
names(present)
names (present)
range(present)
View(present)
present$girls
plot(x=present$year,y=present$girls)
plot(x = present$year, y = present$girls, type = "l")
?plot
plot(x = present$year, y = present$girls, type = "b")
present$boys + present$girls
plot(present$year, present$boys + present$girls, type = "l")
plot(x = present$year, y = present$girls, type = "l")
max(present$girls+present$boys)
which.max(present$girls+present$boys)
plot(present$years,present$boys/present$girls)
plot(x0present$years,y0present$boys/present$girls)
plot(x=present$years,y=present$boys/present$girls)
plot(x=present$year,y=present$boys/present$girls)
plot(x=present$year,y=present$boys/present$girls,l)
plot(x=present$year,y=present$boys/present$girls,type0l)
plot(x=present$year,y=present$boys/present$girls,type=l)
plot(x=present$year,y=present$boys/present$girls,type=b)
plot(x=present$year,y=present$boys/present$girls,"l")
present$boys/(present$boys + present$girls)
plot(present$year,present$boys,"l")
present$boys > present$girls
plot(x=present$year,y=present$boys/present$girls,"l")
which.max(present$boys-present$girls)
plot(present$year,present$boys,"l")
delete(present)
source("http://www.openintro.org/stat/data/cdc.R")
cdc
names(cdc)$
as
names(cdc)
summary(cdc$weight)
table(cdc$smoke100)
table(cdc$smoke100)/20000
barplot(table(cdc$smoke100))
gender = table(cdc$gender)
gender
barplot(gender)
table(cdc$genhlth)
table(cdc$genhlth)/20000
gender_smokers = table(cdc$gender, cdc$smoke100)
mosaicplot(gender_smokers)
dim(cdc)
cdc[567, 6]
cdc[567, "weight"]
mdata = subset(cdc, cdc$gender == "m")
head(mdata)
?subset
names(cdc)
under23_and_smoke = subset(cdc, cdc$smoke100 & cdc$age < 23)
boxplot(cdc$height)
summary(cdc$height)
boxplot(cdc$height ~ cdc$gender)
bmi = (cdc$weight/cdc$height^2) * 703
boxplot(bmi ~ cdc$genhlth)
hist(cdc$age)
hist(bmi, breaks = 50)
scatterplot
plot(cdc$weight ~ cdc$wtdesire)
?wdir
..
dir
ls
ls
x <- 4
ls
5
4
x
x <- c(4, "a", TRUE)
type(x)
class(x)
ls()
?fread
setwd("~/GitHub/CleaningData-CourseProject")
source('~/GitHub/CleaningData-CourseProject/run_analysis.R')
install.packages("dplyr")
source("https://github.com/austin-was-taken/Getting-and-Cleaning-Data-Course-Project/blob/master/run_analysis.R")
source('~/GitHub/CleaningData-CourseProject/run_analysis.R')
View(tidy)
setwd("~/GitHub/CleaningData-CourseProject/UCI HAR Dataset")
source('~/GitHub/CleaningData-CourseProject/run_analysis.R')
library(dplyr)
## Load data
x_train    <- read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)
y_train    <- read.table("UCI HAR Dataset/train/y_train.txt", header = FALSE)
subj_train <- read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)
x_test     <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
y_test     <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)
subj_test  <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)
activities <- read.table("UCI HAR Dataset/activity_labels.txt",header = FALSE)
features   <- read.table("UCI HAR Dataset/features.txt",header = FALSE)
setwd("~/GitHub/CleaningData-CourseProject")
source('~/GitHub/CleaningData-CourseProject/run_analysis.R')
head(x_train)
str(x_train)
dim(features)
head(features)
class(features$V2)
x_merged <- rbind(x_train,x_test)
y_merged <- rbind(y_train,y_test)
head(x_train)
head(x_test)
head(subj_train)
summary(subj_train)
str(subj_test)
?rm
rm(x_test)
## Merge training and test data
x_merged <- rbind(x_train,x_test)
y_merged <- rbind(y_train,y_test)
subj_merged <- rbind (subj_train,subj_test)
rm(x_train,y_train,subj_train,x_test,y_test,subj_test)
print("Merged training and test data\n")
## Replace Activity labels and Features/Metrics in merged data
colnames(x_merged)
features[,2]
colnames(x_merged) <- features[,2]
head(x_merged)
names(x_merged)
head(x_merged, n=1)
y_merged
y_merged
activities
merge(y_merged,activities)
tidy <- cbind(subj_merged, y_merged, x_merged)
head(tidy)
names(tidy)
source('~/GitHub/CleaningData-CourseProject/run_analysis.R')
summary(tidy)
str(tidy)
head(tidy,n=1)
subj_merged
names(subj_merged)
names(tidy)
rename(tidy, Subject = V1, Activity = y_merged)
rename(tidy, Subject = V1, Activity = y_merged)
rename(tidy, V1 = Subject, y_merged = Activity)
rename(tidy, Subject = V1)
rename(tidy, y_merged = Activity)
rename(tidy, Activity = y_merged)
rm(subj_merged, y_merged, x_merged)
rename(tidy, V1 = Subject, y_merged = Activity)
rename(tidy, Subject = V1, Activity = y_merged)
?make.names
names(tidy) <- make.names(names(tidy))
names(tidy)
rename(tidy, Subject = V1, Activity = y_merged)
rename(tidy, V1 = Subject, y_merged = Activity)
names(features)
features
?gsub
features[,2] <- gsub("()","",features[,2])
features
features[,2] <- gsub("\\(","",features[,2]) %>% gsub("\\)","",features[,2])
features[,2] <- gsub("\\(","",features[,2])
features[,2] <- gsub("\\)","",features[,2])
features
source('~/GitHub/CleaningData-CourseProject/run_analysis.R')
names(tidy)
features[,2] <- gsub(",","-",features[,2])
source('~/GitHub/CleaningData-CourseProject/run_analysis.R')
names(tidy)
rename(tidy, Subject = V1, Activity = y_merged)
duplicated(names(tidy))
names(tidy[duplicated(names(tidy)),])
names(tidy[which(duplicated(names(tidy))),])
## Load data
x_train    <- read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)
y_train    <- read.table("UCI HAR Dataset/train/y_train.txt", header = FALSE)
subj_train <- read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)
x_test     <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
y_test     <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)
subj_test  <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)
## Load features and activities
activities <- read.table("UCI HAR Dataset/activity_labels.txt",header = FALSE)
features   <- read.table("UCI HAR Dataset/features.txt",header = FALSE)
print("Finished loading data")
## Merge training and test data
x_merged <- rbind(x_train,x_test)
y_merged <- rbind(y_train,y_test)
subj_merged <- rbind (subj_train,subj_test)
rm(x_train,y_train,subj_train,x_test,y_test,subj_test)
print("Merged training and test data")
## Replace Activity labels and Features/Metrics in merged data
features[,2] <- gsub("\\(","",features[,2])
features[,2] <- gsub("\\)","",features[,2])
features[,2] <- gsub(",","-",features[,2])
colnames(x_merged) <- features[,2]
y_merged <- merge(y_merged,activities)
y_merged <- y_merged[,2]
names(y_merged)
x_train    <- read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)
y_train    <- read.table("UCI HAR Dataset/train/y_train.txt", header = FALSE)
subj_train <- read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)
x_test     <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
y_test     <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)
subj_test  <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)
## Load features and activities
activities <- read.table("UCI HAR Dataset/activity_labels.txt",header = FALSE)
features   <- read.table("UCI HAR Dataset/features.txt",header = FALSE)
print("Finished loading data")
## Merge training and test data
x_merged <- rbind(x_train,x_test)
y_merged <- rbind(y_train,y_test)
subj_merged <- rbind (subj_train,subj_test)
rm(x_train,y_train,subj_train,x_test,y_test,subj_test)
print("Merged training and test data")
## Replace Activity labels and Features/Metrics in merged data
features[,2] <- gsub("\\(","",features[,2])
features[,2] <- gsub("\\)","",features[,2])
features[,2] <- gsub(",","-",features[,2])
colnames(x_merged) <- features[,2]
y_merged <- merge(y_merged,activities)
names(y_merged)
activities
activities <- read.table("UCI HAR Dataset/activity_labels.txt",header = FALSE,colnames =c("ID","Activity"))
activities <- read.table("UCI HAR Dataset/activity_labels.txt",header = FALSE,col.names =c("ID","Activity"))
activities
?merge
## Libraries
library(dplyr)
## Load data
x_train    <- read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)
y_train    <- read.table("UCI HAR Dataset/train/y_train.txt", header = FALSE)
subj_train <- read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)
x_test     <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
y_test     <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)
subj_test  <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)
## Load features and activities
activities <- read.table("UCI HAR Dataset/activity_labels.txt",header = FALSE,col.names =c("ID","Activity"))
features   <- read.table("UCI HAR Dataset/features.txt",header = FALSE)
print("Finished loading data")
## Merge training and test data
x_merged <- rbind(x_train,x_test)
y_merged <- rbind(y_train,y_test)
subj_merged <- rbind (subj_train,subj_test)
rm(x_train,y_train,subj_train,x_test,y_test,subj_test)
print("Merged training and test data")
## Replace Activity labels and Features/Metrics in merged data
features[,2] <- gsub("\\(","",features[,2])
features[,2] <- gsub("\\)","",features[,2])
features[,2] <- gsub(",","-",features[,2])
colnames(x_merged) <- features[,2]
y_merged <- merge(y_merged,activities, by.x="V1",by.y="ID")
y_merged <- select(y_merged,Activity)
y_merged
names(y_merged)
## Combine all data and cleanup
tidy <- cbind(subj_merged, y_merged, x_merged)
rm(subj_merged, y_merged, x_merged)
names(tidy)
source('~/GitHub/CleaningData-CourseProject/run_analysis.R')
names(tidy)
source('~/GitHub/CleaningData-CourseProject/run_analysis.R')
names(subj_merged)
?rename
